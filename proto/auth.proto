syntax = "proto3";

package auth;

option go_package = "github.com/saeedjalalisj/grpc-gateway"; 

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {version: "1.0"};
  external_docs: {
    url: "protoc-gen-openapiv2/options/annotations.proto";
    description: "gRPC-gateway boilerplate repository";
  }
  schemes: HTTPS;
};

service AuthService {

  rpc Register (RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/auth/register"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Register a new User"
      description: "Add a user to the server."
      tags: "Users"
    };
  }

  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login" 
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Login users"
      description: "Login users to the server."
      tags: "Users"
    };
  }

  // rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordResponse) {
  //   option (google.api.http) = {
  //     post: "/v1/auth/reset-password"
  //     body: "*"
  //   };
  // }

  // rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse) {
  //    option (google.api.http) = {
  //      post: "/v1/auth/change-password"
  //      body: "*"
  //    };
  // }

  // rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {
  //   option (google.api.http) = {
  //     post: "/v1/auth/refresh-token"
  //     body: "*"
  //   };
  // }

  // rpc Logout (LogoutRequest) returns (LogoutResponse) {
  //   option (google.api.http) = {
  //     post: "/v1/auth/logout"
  //     body: "*" 
  //   };
  // }

  // rpc VerifyToken (VerifyTokenRequest) returns (VerifyTokenResponse) {
  //   option (google.api.http) = {
  //     post: "/v1/auth/verify-token"
  //     body: "*"
  //   };
  // }

}

message LogoutRequest {
  string refresh_token = 1;
}

message LogoutResponse {}

message VerifyTokenRequest {
  string token = 1; 
}

message VerifyTokenResponse {
  bool valid = 1;
}

message RegisterRequest {
  string email = 1; 
  string password = 2;
}

message RegisterResponse {
  string user_id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2; 
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message ResetPasswordRequest {
  string email = 1;
}

message ResetPasswordResponse {}

message ChangePasswordRequest {
  string reset_token = 1;
  string new_password = 2;
}

message ChangePasswordResponse {}

message RefreshTokenRequest {
  string refresh_token = 1; 
}

message RefreshTokenResponse {
  string access_token = 1;
}